name: "Pipeline"

on:
  pull_request:
    branches:
      - main
    paths:
      - .docker/*
      - .github/workflows/*.yml
      - config/*
      - requirements/*.txt
      - src/**/*.py
      - tests/**/*.py
  push:
    branches:
      - release
    paths:
      - .docker/*
      - .github/workflows/*.yml
      - config/*.py
      - requirements/*.txt
      - src/**/*.py
      - tests/**/*.py

jobs:
  lint:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: "ubuntu-20.04"
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.9.6"

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: "Install test dependencies"
        run: |
          pip install --upgrade pip setuptools wheel
          pip install --requirement requirements/test.txt
          pip install --requirement requirements/prod.txt

      - name: "Run black for formatting"
        run: black --config config/pyproject.toml .

      - name: "Run flake8 for linting"
        run: flake8 --config config/setup.cfg .

      - name: "Run isort for imports formatting"
        run: isort --check --settings-file config/pyproject.toml .

  # security:
  #   if: ${{ github.event_name == 'pull_request' }}
  #   runs-on: "ubuntu-20.04"
  #   needs:
  #     - test
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: "Run snyk to check for vulnerabilities"
  #       continue-on-error: true
  #       uses: snyk/actions/python@master
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # build:
  #   if: ${{ github.event_name == 'pull_request' }}
  #   runs-on: "ubuntu-20.04"
  #   needs:
  #     - test
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: "Build docker image"
  #       run: docker build --file .docker/Dockerfile --tag gambley_backend:${{ github.sha }} .
